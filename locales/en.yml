fleek:
  use: "fleek"
  long: "Fleek installs and manages packages in your nix installation with a \nfriendly and approachable config file."
  short: "Fleek makes nix friendly"
  debugFlag: "debug"
  traceFlag: "trace"
  quietFlag: "quiet"
  quietFlagDescription: "suppress logs"
  verboseFlag: "verbose"
  verboseFlagDescription: "show more detailed output"
  gitStatus: "Checking status of fleek repository"
  dirty: "fleek repository has uncommitted changes, run `fleek sync` to push changes"
  ahead: "local fleek repository has unpushed changes, run `fleek sync` to push changes"
  behind: "remote fleek repository has changes to be pulled"
  pull: "Pulling remote changes"
  push: "Pushing local changes to remote"
  nixGarbage: "run garbage collection to remove unused items"
  syncFlag: "synchronize git repository before and after command"
  installNix: "No nix installation found! We recommend starting at https://zero-to-nix.com/"
  noConfigFound: "Configuration file does not exist."
  noFlakeFound: "Fleek configuration directory does not exist."
  validRepository: "Fleek configuration directory is a git repository."
  notValidRepository: "Fleek configuration directory is not a git repository."
  remoteFound: "Found git remote: "
  noRemote: "Fleek configuration directory has no configured git remotes."
  gettingStatus: "Getting git remote status"
  skippingStatus: "Skipping git remote status"
  aheadStatus: "Local fleek repository is ahead of remote. Run `fleek sync` to push changes."
  behindStatus: "Local fleek repository is behind remote. Run `fleek sync` to pull changes."
  divergedStatus: "Both local and remote repositories have changes. Run `fleek sync` to reconcile changes."
  migrating: "Migrating .fleek.yml to current version"
  migrated: "Migrated .fleek.yml"
eject:
  use: "eject"
  long: "Eject writes your current configuration to disk and removes Fleek's templates.\n\nChanges to .fleek.yml will be ignored; you will modify your Nix configurations directly."
  short: "Manage your home configuration directly, without the .fleek.yml file."
  verboseFlag: "show more detailed output"
  start: "Applying current fleek configuration to your home flake."
  complete: "Home configuration written. All changes should now be made in ~/.config/home-manager/ directly."
  confirm: "Are you sure you want to manage your home configuration files directly?"
apply:
  use: "apply"
  long: "Apply fleek configuration by reading the ~/.fleek.yml file and updating \nthe flake templates."
  short: "Apply fleek configuration"
  behind: "Can't apply with unmerged remote changes. Use `--sync` flag to pull remote changes."
  dryRunFlag: "dry-run"
  dryRunFlagDescription: "dry run - don't apply configuration"
  pushFlag: "push"
  pushFlagDescription: "push modified configuration to git remote"
  pushing: "Pushing changes to git remote"
  writingConfig: "Writing configuration templates"
  writingFlake: "Writing Nix flake"
  commitError: "Error committing changes to local repository"
  checkingSystem: "Checking for current system in flake"
  newSystem: "New system detected"
  applyingConfig: "Applying config to flake"
  dryApplyingConfig: "Not Applying config to flake, dry run"
  done: "Complete!"
init:
  use: "init"
  long: "Initialize fleek with standard configuration options.\n\nIf `--clone` is set, an existing Fleek configuration will be cloned from that repository."
  short: "Initialize fleek"
  forceFlag: "force"
  forceFlagDescription: "overwrite existing configuration files"
  flakeLocation: "Flake Location"
  start: "initializing fleek"
  apply: "apply configuration immediately after cloning"
  clone: "address of existing fleek repository"
  cloned: "repository cloned"
  checkNix: "checking for nix installation"
  writingConfigs: "writing configuration files"
  nixNotFound: "can't find `nix` binary - is nix installed?"
  complete: "Done. \n\nEdit ~/.fleek.yml to your taste and run `fleek apply`"
  locationFlag: "location"
  locationFlagDescription: "location of fleek repository, relative to home"
  gitEmail: "Git Config - enter your email address"
  gitName: "Git Config - enter your full name"
  newSystem: "New System: %s@%s"
add:
  use: "add [package] [package] ..."
  long: "Add a new package or program to your configuration.\n Use the `--program` flag to specify a program which can also be configured by nix."
  short: "Add a new package or program to your configuration"
  program: "add a program instead of package"
  applyFlag: "apply"
  applyFlagDescription: "apply configuration after adding"
  adding: "Adding package "
  applying: "Applying configuration"
  done: "Complete!"
remove:
  use: "remove [package] [package] ..."
  long: "Remove a package or program from your configuration.\n Use the `--program` flag to specify a program which can also be configured by nix."
  short: "Remove a package or program from your configuration"
  program: "remove a program instead of package"
  applyFlag: "apply"
  applyFlagDescription: "apply configuration after removing"
  config: "Removing package from configuration"
  applying: "Removing package and applying configuration"
  done: "Complete!"
remote:
  use: "remote"
  long: "Manage or show the remote git repository"
  short: "Manage or show the remote git repository"
remoteshow:
  use: "show"
  long: "Show the remote git repository"
  short: "Show the remote git repository"
  configured: "Fleek Configured: "
  actual: "Git Configured: "
  done: "Command completed."
remoteadd:
  use: "add"
  long: "Configure fleek to use a remote git repository"
  short: "Configure fleek to use a remote git repository"
  name: "git reference name of the remote"
  saving: "Saving new configuration"
  addingRemote: "Adding git remote"
update:
  use: "update"
  long: "Update installed packages"
  short: "Update installed packages"
  start: "Updating available packages"
  applyFlag: "apply"
  applyFlagDescription: "Applying updates."
  needApply: "Run the `apply` command to apply these updates"
  done: "Update complete."
show:
  use: "show"
  long: "Show packages, managed packages, and aliases added in your current configuration level."
  short: "Show current configuration details"
  packages: "Packages"
  managedPackages: "Managed Packages"
  userPackages: "User Packages"
sync:
  use: "sync"
  long: "Synchronize local configuration with remote git repository"
  short: "Synchronize configuration with git"
  noChanges: "No changes to synchronize"
  gitPush: "Running `git push`"
  gitPull: "Running `git pull`"
  gitCommit: "Running `git commit`"
  remoteStatus: "Remote Status: "
  flakeStatus: "Flake Status: "
  gettingRemoteStatus: "Getting git remote status"
  gettingLocalStatus: "Getting git local status"
search:
  use: "search <package?"
  long: "Search the package repository"
  short: "Search the package repository"
  exactMatches: "Exact Matches"
  fuzzyMatches: "Fuzzy Matches"
  openingCache: "Reading package cache"
  cacheError: "Error reading package cache"
  noResults: "No matching packages found"
  noResultsExact: "No matching packages found, try `--fuzzy`"
  updatingCache: "Updating package cache"
  updateFlag: "update"
  updateFlagDescription: "update the package cache"
  fuzzyFlag: "fuzzy"
  fuzzyFlagDescription: "search name and description"
  fuzzyEnabled: "Fuzzy search enabled"
  try: "Try `fleek add %s` to install %s"
  package: "Package"
  version: "Version"
  description: "Description"

version:
  use: "version"
  short: "Print version information"
  flagVerbose: "verbose"
  flagVerboseDescription: "displays additional version information"
  version: "Version:     %v\n"
  platform: "Platform:    %v\n"
  commit:  "Commit:      %v\n"
  time: "Commit Time: %v\n"
  go: "Go Version:  %v\n"
global:
  completed: "Operation completed successfully"
  failed: "Operation failed"
  applying: "Applying configuration"
  commit: "Commiting git changes"
  initGroup: "Getting Started"
  fleekGroup: "Configuration Commands"
  packageGroup: "Package Management Commands"
  gitGroup: "Repository Management Commands"
  errConflict: "A package in your .fleek.yml exists in your nix profile.\nThis can happen if you manually install something with `nix profile install ...`.\nTo fix this error, run `nix profile list` and find the profile number of the offending package, then run `nix profile remomve [that number]`\nbefore running `fleek` again."

  