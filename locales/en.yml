fleek:
  use: "fleek"
  long: "Fleek installs and manages packages in your nix installation with a \nfriendly and approachable config file."
  short: "Fleek makes nix friendly"
  verboseFlag: "show more detailed output"
  installNix: "No nix installation found! We recommend starting at https://zero-to-nix.com/"

eject:
  use: "eject"
  long: "Eject writes your current configuration to disk and removes Fleek's templates.\n\nChanges to .fleek.yml will be ignored; you will modify your Nix configurations directly."
  short: "Manage your home configuration directly, without the .fleek.yml file."
  verboseFlag: "show more detailed output"
  start: "Applying current fleek configuration to your home flake."
  complete: "Home configuration written. All changes should now be made in ~/.config/home-manager/ directly."
  confirm: "Are you sure you want to manage your home configuration files directly?"
apply:
  use: "apply"
  long: "Apply fleek profile by reading the ~/.fleek.yml file and updating \nthe flake templates."
  short: "Apply fleek profile"
  dryRun: "dry run - don't apply configuration"
  push: "push modified configuration to git remote"
  pushing: "Pushing changes to git remote"
  writingConfig: "Writing configuration templates"
  writingFlake: "Writing Nix flake"
  commitError: "Error committing changes to local repository"
  checkingSystem: "Checking for current system in flake"
  newSystem: "New system detected"
  applyingConfig: "Applying config to flake"
  dryApplyingConfig: "Not Applying config to flake, dry run"
  done: "Complete!"

init:
  use: "init"
  long: "Initialize fleek with standard configuration options.\n\nIf `--clone` is set, an existing Fleek configuration will be cloned from that repository."
  short: "Initialize fleek"
  force: "overwrite existing configuration files"
  start: "initializing fleek"
  apply: "apply configuration immediately after cloning"
  clone: "address of existing fleek repository"
  checkNix: "checking for nix installation"
  writingConfigs: "writing configuration files"
  nixNotFound: "can't find `nix` binary - is nix installed?"
  complete: "Done. \n\nEdit ~/.fleek.yml to your taste and run `fleek apply`"
add:
  use: "add [package] [package] ..."
  long: "Add a new package or program to your configuration.\n Use the `--program` flag to specify a program which can also be configured by nix."
  short: "Add a new package or program to your configuration"
  program: "add a program instead of package"
  apply: "apply configs after adding"
  applying: "Adding package and applying configuration"
  done: "Complete!"

list:
  use: "list"
  long: "List installed packages or programs"
  short: "List installed packages or programs"
listPackages:
  use: "packages"
  long: "List installed packages"
  short: "List installed packages"
  userBling: "Your Bling Level:"
  lowBling: "Low Bling Packages:"
  defaultBling: "Default Bling Packages:"
  highBling: "High Bling Packages:"
  userInstalled: "User Selected Packages:"
listPrograms:
  use: "programs"
  long: "List installed programs"
  short: "List installed programs"
  userBling: "Your Bling Level:"
  lowBling: "Low Bling Programs:"
  defaultBling: "Default Bling Programs:"
  highBling: "High Bling Programs:"
  userInstalled: "User Selected Programs:"
remove:
  use: "remove [package] [package] ..."
  long: "Remove a package or program from your configuration.\n Use the `--program` flag to specify a program which can also be configured by nix."
  short: "Remove a package or program from your configuration"
  program: "remove a program instead of package"
  apply: "apply configs after adding"
  applying: "Removing package and applying configuration"
  done: "Complete!"
repo:
  use: "remote"
  long: "Manage or show the remote git repository"
  short: "Manage or show the remote git repository"
reposhow:
  use: "show"
  long: "Show the remote git repository"
  short: "Show the remote git repository"
repoadd:
  use: "add"
  long: "Configure fleek to use a remote git repository"
  short: "Configure fleek to use a remote git repository"
  name: "git reference name of the remote"
